#include <ilcplex/ilocplex.h>
#include<chrono>
#include <iostream>
#include <fstream>
#include "IncludeDataFunction.h"
#include <iomanip>
ILOSTLBEGIN
void printTable(const SMESSRes& res, int numMgs) {
    std::cout << std::setw(50) << std::setfill('-') << "" << std::endl;
    std::cout << std::setfill(' ') << std::left;
    std::cout << std::setw(3) << "MG" << std::setw(20) << "Ecapacity" << std::setw(20) << "Tcapacity" << std::setw(20) << "Hcapacity" << std::endl;

    for (int mg = 0; mg < numMgs; mg++) {
        std::cout << std::setw(50) << std::setfill('-') << "" << std::endl;
        std::cout << std::setw(3) << mg 
            << std::setw(20) << std::setprecision(2) << std::fixed << res.Ecapacity[mg]
            << std::setw(20) << std::setprecision(2) << std::fixed << res.Tcapacity[mg]
            << std::setw(20) << std::setprecision(2) << std::fixed << res.Hcapacity[mg]
            << std::endl;
    }

    std::cout << std::setw(50) << std::setfill('-') << "" << std::endl;
}


using namespace std;
int


main(int, char**)
{

    //double singl = singleMG();
    double obj = centralized();

 
    //vector<double> ELoad = { 671, 663, 637, 661, 661, 737, 766, 797, 818, 853, 900, 932, 934, 853, 829, 858, 829, 818, 829, 842, 847, 805, 795, 721 };
    //vector<double>  TLoad = { 242, 176, 155, 158, 153, 232, 345, 374, 345, 347, 208, 197, 174, 163, 195, 268, 347, 368, 432, 468, 479, 471, 345, 334 };
    //vector<double>  CLoad = { 892, 774, 755, 787, 882, 976, 1158, 1579, 1463, 1558, 1726, 2011, 2103, 2250, 1895, 1703, 1426, 1366, 1639, 1503, 1284, 1208, 1155, 1121 };
    //vector<double>  HLoad = { 242, 176, 155, 158, 153, 232, 345, 374, 345, 347, 208, 197, 174, 163, 195, 268, 347, 368, 432, 468, 479, 471, 345, 334 };
   


    //vector<double> Electric1 = { 1297, 1314, 1317, 1300, 1280, 1309, 1314, 1572, 1910, 1982, 1973, 2132, 2002, 1990, 1988, 1999, 1999, 1866, 2002, 1976, 1811, 1702, 1580, 1499 };
    //vector<double>  Thermal1 = { 280, 280, 275, 286, 289, 283, 292, 295, 303, 301, 301, 298, 295, 301, 298, 303, 289, 289, 298, 301, 298, 298, 289, 298 };
    //vector<double>  Cooling1 = { 332, 329, 303, 318, 332, 344, 344, 413, 439, 442, 425, 436, 474, 477, 494, 471, 471, 428, 428, 425, 410, 407, 376, 370 };
    //vector<double>  Hydrogen1 = { 526, 405, 497, 468, 433, 370, 500, 578, 529, 665, 529, 459, 393, 462, 419, 523, 506, 485, 451, 543, 558, 561, 532, 471 };





    //vector<double> Electric = { 1732, 1716, 1918, 1863, 1951, 2015, 1985, 2088, 2259, 2180, 2293, 2436, 2207, 2180, 2113, 1939, 2003, 2034, 2009, 2134, 2064, 1976, 1869, 1732 };
    //vector<double>Thermal = { 107, 131, 146, 155, 143, 171, 284, 332, 363, 369, 378, 405, 491, 424, 402, 402, 405, 402, 390, 351, 314, 436, 290, 220 };
    //vector<double> Cooling = { 1082, 1113, 1122, 1180, 1207, 1235, 1302, 1268, 1387, 1634, 1662, 1723, 1793, 1704, 1674, 1646, 1619, 1573, 1634, 1491, 1375, 1305, 1204, 1207 };


    //vector<double> Rdg1 = { 0, 0, 0, 0, 0, 0, 165, 283, 417, 633, 891, 1210, 932, 742, 520, 427, 211, 160, 0, 0, 0, 0, 0, 0 };

    //vector<double> Rdg2 = { 2693, 2590, 2409, 2075, 2245, 2178, 2415, 2477, 2884, 2600, 3399, 3198, 2884, 3708, 2703, 2945, 2631, 2513, 2884, 2951, 3440, 2714, 2878, 2889 };
    //vector<double> Rdg3 = {2250, 2209, 2085, 1941, 2018, 1993, 2266, 2405, 2750, 2837, 3589, 3821, 3306, 3749, 2822, 2665, 2436, 2353, 2348, 2394, 2549, 2312, 2333, 2364}; //Power generated by PV w.r.t time

    //
    //vector<double>  Cpowerbuy = { 5.8, 4.2, 3.2, 2.5, 2.7, 4.4, 5.7, 6.7, 8.4, 9.7, 9.5, 11.4, 12.5, 13.6, 13.9, 14.9, 15.9, 16.1, 18.1, 18.5, 13.1, 8.2, 6.8, 19.0 };  
    //
    //vector<double>  Cpowersell;

    //for (int i = 0; i < 24; i++)
    //{
    //    	Cpowersell.push_back(Cpowerbuy[i] * 0.5);
    //}

    //vector<double>  Tpowerbuy = { 5.8, 2.6, 3.0, 2.6, 2.5, 3.1, 4.5, 4.8, 5.0, 6.2, 6.2, 7.0, 7.5, 8.5, 8.3, 7.1, 8.0, 6.7, 5.7, 6.5, 7.5, 5.1, 4.5, 2.5 };  
    //
    ////vector<double>  Tpowerbuy = { 5.8, 4.2, 3.2, 2.5, 2.7, 4.4, 5.7, 6.7, 8.4, 9.7, 9.5, 11.4, 12.5, 13.6, 13.9, 14.9, 15.9, 16.1, 18.1, 18.5, 13.1, 8.2, 6.8, 19.0 };

    //vector<double>  Tpowersell = { 2.325, 1.95, 2.25, 1.95, 1.875, 2.325, 3.375, 3.6, 3.75, 4.65, 4.65, 5.25, 5.625, 6.375, 6.225, 5.325, 6.0, 5.025, 4.275, 4.875, 5.625, 3.825, 3.375, 1.875 };



    //int ev1 = 20;
    //int numMgs = 3;
    //int cap = 1000;
    //int id1 = 0;
    //int id2 = 1;
    //int id3 = 2;

    //MGCRes mg1 = MGC(id1,ev1, Tpowerbuy, Tpowersell, Cpowerbuy, Cpowersell, Rdg2, Electric, Thermal, Cooling, HLoad);
    //MGCRes mg2 = MGC(id2,ev1, Tpowerbuy, Tpowersell, Cpowerbuy, Cpowersell, Rdg3, Electric1, Thermal1, Cooling1, Hydrogen1);
    //MGCRes mg3 = MGC(id3, ev1, Tpowerbuy, Tpowersell, Cpowerbuy, Cpowersell, Rdg3, Electric, Thermal, Cooling, HLoad);



    //prices p;
    //p.EPriceBuy = Cpowerbuy;
    //p.EPriceSell = Cpowersell;
    //p.TPriceBuy = Tpowerbuy;
    //p.TPriceSell = Tpowersell;
    //p.HydrogenPrice = 100;

    //std::vector<MGCRes> mgVector;

    //// Add mg1 and mg2 to the vector
    //mgVector.push_back(mg1);
    //mgVector.push_back(mg2);
    //mgVector.push_back(mg3);

    //SMESSRes res = smess(cap, numMgs, mgVector, p);

    //printTable(res, numMgs);


    //double a = CEMS(numMgs, res, p);


    //system("pause");
    return 0;
}